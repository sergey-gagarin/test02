<?php$session_server = "put here your servername";$session_username = "put here your username";$session_password = "put here your password";$session_email = "put here your emailaddress";function givehead() { include("header.php"); echo "<br>" ; }function givefoot() { echo "</td></tr></table></body></html>"; }if ($CMD==""){	$mbox=imap_open("{".$session_server.":110/pop3}".urldecode("INBOX"), $session_username, $session_password);	$mcheck = imap_check($mbox);	$mnum = $mcheck->Nmsgs;	givehead();	echo "<form action='onemail.php?CMD=delete' method=post name=delete>\n";	$overview = imap_fetch_overview($mbox, "1:$mnum", 0);	echo "<table border=0 cellpadding=0 cellspacing=0 width=500>";	$s=sizeof($overview);	$tel = 0;	for($i=$s-1; $i >= 0; $i--)	{		$val=$overview[$i];		$rawsubject = imap_mime_header_decode($val->subject);		$subject = $rawsubject[0]->text;		if ($subject=='') {$subject = "no subject";}		if (strlen($subject)>67) $subject = substr($subject,0,67)."...";		$rawfrom = imap_mime_header_decode($val->from);		$from = $rawfrom[0]->text;		if ($from=='') {$from = "no name";}		$rawto = imap_mime_header_decode($val->to);		$to = $rawto[0]->text;		if ($to=='') {$to = "no name";}		$head = imap_fetchheader($mbox,$val->msgno);		$mtype = "";		$stype = "";		$conttype = getheadervalue("Content-Type:",$head);		if (!empty($conttype) && eregi("([^/]*)/([^ ;\n\t]*)", $conttype, $regs))			{$mtype = $regs[1];$stype = $regs[2];}		if (strtolower($mtype)!="text" && strtolower($stype)!= "alternative" && !empty($mtype) && !empty($stype))			$stat="A"; else $stat="";						$st = getheadervalueO("Status:", $head);		if ($st!="" && strstr($st,"R")==false) {$tdcolor = "<td>";}		else {$tdcolor = "<td>";}		if ($outbox && $from == $session_email) {			echo "<tr>";			$tel ++;			$info=imap_headerinfo($mbox,$val->msgno);			$nummert=$val->msgno."@".$info->udate;			echo "$tdcolor<input TYPE='checkbox' NAME='num[]' VALUE=$nummert>&nbsp;</td>";			echo "$tdcolor<a HREF='onemail.php?CMD=view&num=$nummert'>";			echo "$to</a></td>";			echo "$tdcolor $subject</td>";			$dateNumber=strtotime($val->date);			$date = date('d-m-y H:i',$dateNumber);			echo "$tdcolor $date </td>";			echo "$tdcolor".(round(($val->size/1000)+0.5))."k</td>";			echo "</tr>\n";		} else if ( !$outbox && $from != $session_email){ 			echo "<tr>";			$tel ++;			$info=imap_headerinfo($mbox,$val->msgno);			$nummert=$val->msgno."@".$info->udate;			echo "$tdcolor<input TYPE='checkbox' NAME='num[]' VALUE=$nummert>&nbsp;</td>";			echo "$tdcolor<a HREF='onemail.php?CMD=view&num=$nummert'>";			echo "$from</a></td>";			echo "$tdcolor $subject</td>";			$dateNumber=strtotime($val->date);			$date = date('d-m-y H:i',$dateNumber);			echo "$tdcolor $date </td>";			echo "$tdcolor".(round(($val->size/1000)+0.5))."k</td>";			echo "</tr>\n";		}	}		echo "<tr><td colspan=5 align=center><br><br>$tel ";	if ($tel==1) { echo "message | "; } else { echo "messages | "; }	echo "<a href='javascript:void(document.forms[0].submit())'>delete</a> | ";	echo "<a HREF='onemail.php?CMD=compose'>compose</a> | ";	if ($outbox) { echo "<a HREF='onemail.php'>inbox</a>"; } 	else { echo "<a HREF='onemail.php?outbox=true'>outbox</a>"; }	echo "</td></tr></table>";	echo "</form><script language='javascript'><!--\n";	echo "function selectStaat() {\n";	echo "  var state = document.forms[0].allemaal.checked;\n";	echo "  for (i=0;i< document.forms[0].elements.length;i++){\n";	echo "    document.forms[0].elements[i].checked=state;\n";	echo "    }\n}\n//--></script>";	imap_close($mbox);	givefoot();}if ($CMD=="delete"){	$mbox=imap_open("{".$session_server.":110/pop3}".urldecode("INBOX"), $session_username, $session_password);	for ($i=0;$i<sizeof($num);$i++) 	{		if (is_array($num)) $this=$num[$i]; else $this=$num;		$timetest= strstr($this,"@");		$pos = strpos($this,"@");		if ($pos!=0)			{			$numr= substr($this,0,$pos);			echo " ";			$info=imap_headerinfo($mbox,$numr);			echo " ";			}		imap_delete($mbox,$numr);		}	imap_expunge($mbox);	imap_close($mbox);	die("<META HTTP-EQUIV='Refresh' CONTENT='0;url=onemail.php'></META>");}if ($CMD=="source"){	$mbox=imap_open("{".$session_server.":110/pop3}".urldecode("INBOX"),$session_username,$session_password);	$structure=imap_fetchstructure($mbox,$num);	givehead();	echo "<table border=0><tr><td><font size=2>\n<pre>";	$rb=imap_fetchbody($mbox,$num,0);	$rb=str_replace("<","&lt;",$rb);	echo $rb;	echo "\n\n";	$mb=imap_body($mbox,$num);	imap_close($mbox);	$mb=str_replace("<","&lt;",$mb);	echo $mb;	echo "</pre>\n";	echo "</td></tr></table><br></font><a href=onemail.php>back</a>";	givefoot();}if ($CMD=="view"){	$mbox = imap_open("{".$session_server.":110/pop3}".urldecode("INBOX"), $session_username, $session_password);	$numorg=$num;	$timetest= strstr($num,"@");	$num= substr($num,0,strpos($num,"@"));			imap_setflag_full($mbox,$num,'\\SEEN');  	givehead();	echo "<table border=0 cellpadding=6 cellspacing=2 width=500><tr><td bgcolor=eeeeee>";	$info=imap_headerinfo($mbox,$num);	$fromm=$info->from[0];	$naamarray = imap_mime_header_decode($fromm->personal);	$naam = $naamarray[0]->text;	if ($naam!='') $from=$naam." (".$fromm->mailbox ."@".$fromm->host.")";		else $from=$fromm->mailbox ."@".$fromm->host;			$from=htmlspecialchars($from);	echo "From: $from<br>";	if (strlen($info->toaddress)>75) $todef=substr($info->toaddress,0,75)." .."; else $todef=$info->toaddress;	echo "To: $todef<br>";	if ($info->ccaddress) 		{		if (strlen($info->ccaddress)>75) $cc=substr($info->ccaddress,0,75)." .."; else $cc=$info->ccaddress;		echo "Cc: $cc<br>";		}		$rawdsubject = imap_mime_header_decode($info->Subject);	$subject = htmlspecialchars($rawdsubject[0]->text);	echo "Subject: $subject<br>";	$dateNumber=strtotime($val->date);	$date = date('d-m-y H:i',$info->udate);echo "Date: $date</td></tr><tr><td>";	$body=parseStructure($mbox,$num);	echo $body;	echo"</td></tr><tr><td bgcolor=eeeeee>Attachments: ";	if (sizeof($attachments) != 0)		{		for ($at=0;$at<sizeof($attachments);$at++)			{			$file = $attachments[$at]->filename;			$part = $attachments[$at]->part;			if (empty($file)) {$file = $lang_unknown;} 			echo "<a href=onemail.php?CMD=Attachview&num=$num&part=$part target=_blank>$file ".convsize($attachments[$at]->size)."</a> ";		}	} else { echo "none"; }		    echo "</td></tr></table><br><br><a HREF='onemail.php'>back</a> | ";	echo "<a href='onemail.php?CMD=delete&num=$numorg'>delete</a> | ";	echo "<a href='onemail.php?CMD=source&num=$numorg'>source</a> | ";	echo "<a href='onemail.php?CMD=compose'>compose</a> | ";	echo "<a href='onemail.php?CMD=reply&num=$numorg'>reply</a> | ";	echo "<a href='onemail.php?CMD=replytoall&num=$numorg'>reply all</a>";	givefoot();}	elseif ($CMD=="reply" || $CMD=="replytoall"){	$mbox = imap_open("{".$session_server.":110/pop3}".urldecode("INBOX"), $session_username, $session_password);	$timetest= strstr($num,"@");	$num= substr($num,0,strpos($num,"@"));			givehead();	$replytext=imap_headerinfo($mbox,$num);	$to=$replytext->reply_to[0];	if ($to=="") {$to=$replytext->from[0];} 	$naamarray = imap_mime_header_decode($to->personal);	$naam = $naamarray[0]->text;	if ($naam!='') $tototal=$naam." <".$to->mailbox ."@".$to->host.">";		else $tototal=$to->mailbox ."@".$to->host;	$tototal = eregi_replace("\"","'",$tototal);	$tototal = eregi_replace(","," ",$tototal);	if ($CMD=="replytoall")		{		$tototal=$tototal.",".$replytext->toaddress;		$cc=$replytext->ccaddress;		}	$body=parseStructure($mbox,$num);	$body = eregi_replace("<p([^>]*)>", "\n\n", $body);	$body = strip_tags($body);	$body = str_replace("\n", "\n> ", $body);	$subj = $replytext->Subject;	$subj = str_replace("Re: ","",$subj);	$subj = str_replace("RE: ","",$subj);	$generated=$session_username."@".$session_server;	$generated=str_replace("mail.","",$generated);	$generated=str_replace("pop.","",$generated);	$generated=str_replace("pop3.","",$generated);	$generated=str_replace("imap.","",$generated);	echo "<form name=rplsend ACTION=onemail.php?CMD=send enctype=multipart/form-data METHOD=post>";	echo "<input type=hidden class=formText name=fr value=$session_email>";	echo "<input type=hidden class=formText name=bcc>";	echo "<table cellspacing=10 cellpadding=0 border=0>";	echo "<tr><td>to:<br><input type=text class=formText name=to value=\"$tototal\">";	echo "</td><td>cc:<br><input type=text name=cc  class=formText value=$cc></td></tr>";	echo "<tr><td>subject:<br><input type=text class=formText name=su value=Re: $subj>";	echo "</td><td>attachment: <br><input name=userfile class=formSelect type=file>";	echo "</td></tr></table><textarea rows=20 name=ms class=formAreaBig wrap=virtual>";	echo "\n\n\n\n";	echo "> ".$body;	echo "</textarea><br><br>\n";	echo "<a href=javascript:document.rplsend.submit()>send</a> | <a href=onemail.php>back</a>";	echo "</form>";	givefoot();}elseif ($CMD=="compose"){	$generated=$session_username."@".$session_server;	$generated=str_replace("mail.","",$generated);	$generated=str_replace("pop.","",$generated);	$generated=str_replace("pop3.","",$generated);	$generated=str_replace("imap.","",$generated);		givehead();	echo "<form name=msgsend ACTION=onemail.php?CMD=send enctype=multipart/form-data METHOD=post>\n";	echo "<input type=hidden name=MAX_FILE_SIZE VALUE=10000000>\n";	echo "<input type=hidden class=formText name=fr value=$session_email>";	echo "<input type=hidden class=formText name=bcc size=20>";	echo "<table cellspacing=10 cellpadding=0 border=0><tr><td>To:<br><input type=text class=formText name=to value=$to>";	echo "</td><td>CC:<br><input type=text class=formText name=cc>";	echo "</td></tr><tr><td>Subject:<br><input class=formText type=text name='su'>";	echo "</td><td>Bijlage:<br><input class=formText name=userfile type=file>";	echo "</td></tr></table><textarea class=formAreaBig rows=20 name=ms wrap=virtual>";	echo "</textarea><br><br>";	echo "<a href=javascript:document.msgsend.submit()>send</a> | <a href=onemail.php>back</a>";	echo "</form>";	givefoot();}elseif ($CMD=="Attachview")	{	$mbox=imap_open("{".$session_server.":110/pop3}".urldecode("INBOX"), $session_username, $session_password);	$msg=$num;	$bypasscheck = 0;	if (!eregi("^([0-9]*)$", $msg) or !eregi("([0-9\.]*)", $part)) exit();	$tmpa = array();	$ret = array();	if (eregi("([0-9\.]*)\.([0-9\.]*)", $part, $ret)) 		{		$pone = ($ret[1] - 1);		$ptwo = ($ret[2] - 1);		}	else {$pone = ($part - 1);}	$dpara = array();	$struct = imap_fetchstructure($mbox, $msg);	$body = imap_fetchbody($mbox, $msg, $part);	imap_close($mbox);		$tmpa = $struct->parts;	if ($ptwo) 		{		$tmpa = $tmpa[$pone]->parts;		$obj = $tmpa[$ptwo];		}	else		{		$obj = $tmpa[$pone];		}	$dpara = $obj->dparameters;	for ($v=0;$v<sizeof($dpara);$v++)		{		if (eregi("filename", $dpara[$v]->attribute)) {$fname = $dpara[$v]->value;}		}	if (empty($fname)) 		{		$para = $obj->parameters;		for ($v=0;$v<sizeof($para);$v++)			{			if (eregi("name", $para[$v]->attribute)) {$fname = $para[$v]->value;}			}		}	if (empty($fname)) {$disp = $obj->description;}	if (empty($fname)) {$fname = $lang_unknown;}		$mime_type = mimetype($obj->type) . "/" . strtolower($obj->subtype);	if ($mime_type == "message/rfc822") {$mime_type = "text/plain";}	header("Content-Type: " . $mime_type);	switch ($obj->encoding) {		case 4: $body = imap_qprint($body);break;		case 3:	$body = imap_base64($body);break;		default:			$beginning=substr($body,0,50);			if (stristr($beginning,"BinHex")!=FALSE) $fname=$fname.".binhex";			break;		}	header("Content-Disposition: attachment; filename=$fname");	print $body;}	elseif ($CMD=="send"){	$head="From: ".$fr."\n";	$head.="CC: $cc, $session_email\n";	if ($bcc) $head.="BCC: $bcc\n";	$ms = str_replace('\\'.'"','"',$ms);	$ms = str_replace('\\'."'","'",$ms);	$su = str_replace('\\'.'"','"',$su);	$su = str_replace('\\'."'","'",$su);	if ($userfile!="") Attach($userfile,$userfile_name);	mail($to,$su,$ms,$head);	echo "<META HTTP-EQUIV='Refresh' CONTENT='1;url=onemail.php'></META>";	givehead();	echo "Mail is sent!";	givefoot();}elseif ($CMD=="logoff"){	echo "<META HTTP-EQUIV='Refresh' CONTENT='0;url=onemail.php'>";}exit();function getheadervalueO($fieldname, $header) {	$head="\n".$header."\n";	$begin = strpos($head,"\n".$fieldname);	if ($begin==false) return "";	$end= strpos($head,"\n",$begin+1);	$result=substr($head,$begin+1+strlen($fieldname),$end-$begin-strlen($fieldname));	return $result;}function getheadervalue($fieldname, $header) {		$header = eregi_replace("\t", " ", $header);		$results = array();		if (eregi("$fieldname (.*)", $header, $results))			{			$fieldval = $results[1];			for ($b=0;$b<=strlen($fieldval);$b++) {				$curr = substr($fieldval, $b, 1);				$next = substr($fieldval, $b + 1, 1);				if ($curr == "\n" && $next != " ") {break;}				if ($curr == "\t") { $curr = " "; }				if ($curr == "\n") { $curr = ""; }				$resu .= $curr; 			}		}		$resu = eregi_replace("\([^\)]*\)", "", $resu);		return $resu;}function parse_text($text) {		$text = eregi_replace("\"", "&quot;", $text);		$text = eregi_replace("'", "&#039;", $text);		$text = eregi_replace("<", "&lt;", $text);		$text = eregi_replace(">", "&gt;", $text);		$text = eregi_replace("([:; \(\n])(([-&\._a-z0-9]*)@([a-z0-9-]*)\.([-\.a-z0-9]*))", "\\1<a href=\"onemail.php?CMD=compose&to=\\2\">\\2</a>", $text);		$text = eregi_replace("([[:alnum:]]+)://([a-z0-9/=?%#&_\.-]*)", "<a href=\"\\1://\\2\" target=\"_blank\">\\1://\\2</a>", $text);		$text = eregi_replace("([^[:alnum:]\"/])(www\.)([a-z0-9/=?%#&_\.-]*)", "\\1<a href=\"http://\\2\\3\" target=\"_blank\" target=\"_new\">\\2\\3</a>", $text);		$text = eregi_replace("([^[:alnum:]\"/>])(ftp\.)([a-z0-9/=?%#&_\.-]*)", "\\1<a href=\"ftp://\\2\\3\" target=\"_blank\" target=\"_new\">\\2\\3</a>", $text);		$text = eregi_replace("  ", "&nbsp;&nbsp;", $text);		return nl2br($text);	}function mimetype($mime) {		switch ($mime) {			case 6:				return "video";				break;			case 5:				return "image";				break;			case 4:				return "audio";				break;			case 3:				return "application";				break;			case 2:				return "message";				break;			default:				return "text";				break;	}}function convsize ($size) {	if ($size > 1048576) {		return sprintf("(%.1fMB)", $size / 1048576);	}	else {		return sprintf("(%.1fkB)", $size / 1024);	}}function parse_html($text) {	$text = eregi_replace("<a ([^>]*)>", "<a target=\"_blank\" \\1>", $text);	return $text;}// Deze functie voegt bij de gegeven message en headers de file toefunction Attach($AttmFile,$FileName)	{	global $ms,$head; 	$Text=$ms;	$Html=$ms; 	if ($Text=="") {$Text=" ";$Html=" ";}	$OB="----=_OuterBoundary_000";	$IB="----=_InnerBoundery_001";	$Html=$Html?$Html:preg_replace("/\n/","{br}",$Text) 	 or die("neither text nor html part present.");	$Text=$Text?$Text:"Sorry, but you need an html mailer to read this mail.";	$headers ="MIME-Version: 1.0\r\n";	$headers.=$head;	$headers.="X-Priority: 0\n";	$headers.="Content-Type: multipart/mixed;\n\tboundary=\"".$OB."\"\n";	$Msg ="This is a multi-part message in MIME format.\n";	$Msg.="\n--".$OB."\n";	$Msg.="Content-Type: multipart/alternative;\n\tboundary=\"".$IB."\"\n\n";	$Msg.="\n--".$IB."\n";	$Msg.="Content-Type: text/plain;\n\tcharset=\"iso-8859-1\"\n";	$Msg.="Content-Transfer-Encoding: quoted-printable\n\n";	$Msg.=$Text."\n";	$Msg.="\n--".$IB."--\n";	$patharray = explode ("/", $AttmFile);	$Msg.= "\n--".$OB."\n";	$Msg.="Content-Type: application/zip;\n\tname=\"".$FileName."\"\n";	$Msg.="Content-Transfer-Encoding: base64\n";	$Msg.="Content-Disposition: attachment;\n\tfilename=\"".$FileName."\"\n\n";			$fd=fopen ($AttmFile, "r");	$FileContent=fread($fd,filesize($AttmFile));	fclose ($fd);	$FileContent=chunk_split(base64_encode($FileContent));	$Msg.=$FileContent;	$Msg.="\n\n";	$Msg.="\n--".$OB."--\n";		$ms=$Msg;	$head=$headers;}function parseStructure($mbox,$num){	global $attachments,$html_entity;	# Parse structure	$struct = imap_fetchstructure($mbox,$num);	$parts = $struct->parts;	if ($struct->type) {		for ($x=0;$x<sizeof($parts);$x++) {			$ttype = $parts[$x]->type;			if ($ttype == 1) {				# Multipart in multipart				$sparts = $parts[$x]->parts;				for ($c=0;$c<sizeof($sparts);$c++) {					if (!$sparts[$c]->type && empty($sparts[$c]->disposition)) {						if (eregi("html", $sparts[$c]->subtype)) {							# HTML message							$part_needed = ($x + 1) . "." . ($c + 1);							$part_encoding = $sparts[$c]->encoding;							$html_entity = 1;						}						elseif (eregi("plain", $sparts[$c]->subtype)) {							# Plain text							$part_needed = ($x + 1) . "." . ($c + 1);							$part_encoding = $sparts[$c]->encoding;						}					}					else {						$dpara = $sparts[$c]->dparameters;						for ($v=0;$v<sizeof($dpara);$v++) {							if (eregi("filename", $dpara[$v]->attribute)) {								$fname = $dpara[$v]->value;							}						}						if (empty($fname)) {							$para = $sparts[$c]->parameters;							for ($v=0;$v<sizeof($para);$v++) {								if (eregi("name", $para[$v]->attribute)) {									$fname = $para[$v]->value;								}							}						}						if (empty($fname)) {							$disp = $sparts[$c]->description;						}						$an = sizeof($attachments);						$attachments[$an]->part = ($x + 1) . "." . ($c + 1);						$attachments[$an]->filename = $fname;						$attachments[$an]->size = $sparts[$c]->bytes;						$attachments[$an]->mime = mimetype($sparts[$c]->type) . "/" . strtolower($sparts[$c]->subtype);						$fname = "";					}							}			}			else {				if (!$parts[$x]->type && empty($parts[$x]->disposition)) {					if (eregi("html", $parts[$x]->subtype)) {						# HTML message						$part_needed = ($x + 1);						$part_encoding = $parts[$x]->encoding;						$html_entity = 1;					}					elseif (eregi("plain", $parts[$x]->subtype)) {						# Plain text						$part_needed = ($x + 1);						$part_encoding = $parts[$x]->encoding;					}									}				else {					$dpara = $parts[$x]->dparameters;					for ($v=0;$v<sizeof($dpara);$v++) {						if (eregi("filename", $dpara[$v]->attribute)) {							$fname = $dpara[$v]->value;						}					}					if (empty($fname)) {						$para = $parts[$x]->parameters;						for ($v=0;$v<sizeof($para);$v++) {							if (eregi("name", $para[$v]->attribute)) {								$fname = $para[$v]->value;							}						}					}					if (empty($fname)) {						$fname = $parts[$x]->description;					}					$an = sizeof($attachments);					$attachments[$an]->part = ($x + 1);					$attachments[$an]->filename = $fname;					$attachments[$an]->size = $parts[$x]->bytes;					$attachments[$an]->mime = mimetype($parts[$x]->type) . "/" . strtolower($parts[$x]->subtype);					$fname = "";				}						}		}	}	else {		# Not multipart		if (eregi("html", $struct->subtype)) {			# HTML message			$part_needed = "body";			$part_encoding = $struct->encoding;			$html_entity = 1;		}		else {			$part_needed = "body";			$part_encoding = $struct->encoding;		}	}  	# Get part	if ($part_needed == "body") {$body = imap_body($mbox,$num);}	else {$body =imap_fetchbody($mbox,$num,$part_needed);}	imap_close($mbox);	switch ($part_encoding)		{		case 4:			$body = imap_qprint($body);			break;		case 3:			$body = imap_base64($body);			break;		default:			break;		}	if ($html_entity)		{		$body = parse_html($body);		# Check for inline images		if (sizeof($attachments) != 0) {			for ($c=0;$c<sizeof($attachments);$c++) {				list($x, $y, $z, $id) = explode("|", $attachments[$c]);				if (!empty($id)) {					# Will get better...					$id = eregi_replace("<([^>]*)>", "\\1", $id);					$id = str_replace("$", "\\$", $id);					$body = eregi_replace("src=(['\"])cid:" . $id . "(['\"])", "src=\\1$PHP_SELF?CMD=Attachview&num=$msg&part=$x\\2", $body);					$body = eregi_replace("background=(['\"])cid:" . $id . "(['\"])", "background=\\1$PHP_SELF?CMD=Attachview&num=$msg&part=$x\\2", $body);					$body = eregi_replace("src=cid:" . $id, "src=\"$PHP_SELF?CMD=Attachview&num=$msg&part=$x\"", $body);					$body = eregi_replace("background=cid:" . $id, "background=\"$PHP_SELF?CMD=Attachview&num=$msg&part=$x\"",$body);					}				}			}			}	else {$body = parse_text($body);}	return $body;}?>